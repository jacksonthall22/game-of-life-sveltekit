name: Deploy to Firebase Hosting on PR
'on': pull_request
jobs:
  build_and_preview:
    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest

    # https://stackoverflow.com/a/76209121/7304977
    # strategy:
    #   matrix:
    #     node-version: [16.14.2]
    #     # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16.17.x'

      - name: Clean install
        run: npm ci

      - name: Install firebase-tools
        run: npm install -g firebase-tools
            
      - name: Create preview channel
        uses: mathiasvr/command-output@v2.0.0
        id: create_preview
        with:
          run: firebase hosting:channel:create ${{ github.event.pull_request.number }}
        env:
            FIREBASE_CLI_EXPERIMENTS: webframeworks
            FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      # Output will look like this:
      # 
      # +  hosting:channel: Channel <pr_number> has been created on site <project_id>.
      # +  hosting:channel: Channel <pr_number> will expire at <timestamp>.
      # +  hosting:channel: Channel URL: https://<project_id>--<pr_number>-<random_hash>.web.app
      # 
      # To deploy to this channel, use firebase hosting:channel:deploy <pr_number>.

      - name: Get preview channel URL from stdout
        uses: mathiasvr/command-output@v2.0.0
        id: preview_url
        with:
          run: echo "${{ steps.create_preview.outputs.stdout }}" | perl -ne 'print "$1\n" if /(https:\/\/[^\s]+)/'
      
      - name: Deploy preview channel
        run: firebase hosting:channel:deploy ${{ github.event.pull_request.number }}
        env:
            FIREBASE_CLI_EXPERIMENTS: webframeworks
            FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Comment on PR with preview channel URL
        uses: actions/github-script@v4
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Preview URL: ${steps.preview_url.outputs.stdout}`
            })